{
  "logging" : {
    //trace,debug,info,warn,error
    "level" : "trace",
    //json,txt
    "format" : "txt"
  },

  //notification channels
  "notifications": {
    //"email" : "mon@algonode.xyz",
    //"slack" : "",
    //"discord" : ""
  },

  "indexer": {

    "enabled" : true,
    
    //tokens for algod API, can have multiple for different "customers"
    //    "tokens": ["XXX"],

    //ratelimit limits number of request per IP address if greater than zero
    "ratelimit": 100,

    //http endpoint definition
    "http": {
      "enabled": true,
      "listen": ":18980",
      //h2c enabled cleartext HTTP/2 
      "h2c": true
    },

    //https endpoint with auto let's encrypt SSL
    "https": {
      "enabled": false,
      "certDir": "./ssl",
      "autocerts": true,
      "domain": "dev.mindapp.pl"
    }
  },

  "algod": {
    //tokens for algod API, can have multiple for different "customers"
   //   "tokens": ["XXX"],

    //number of blocks to keep in RAM
    "cache": 1000,

    //ratelimit limits number of request per IP address if greater than zero
    "ratelimit": 100,

    //http endpoint definition
    "http": {
      "enabled": true,
      "listen": ":18090",
      //h2c enabled cleartext HTTP/2 
      "h2c": true
    },

    //https endpoint with auto let's encrypt SSL
    "https": {
      "enabled": false,
      "certDir": "./ssl",
      "autocerts": true,
      "domain": "dev.mindapp.pl"
    },

    //DO NOT CHANGE
    "catchupTopics": {
      "betanet": "https://algorand-catchpoints.s3.us-east-2.amazonaws.com/channel/betanet/latest.catchpoint",
      "testnet": "https://algorand-catchpoints.s3.us-east-2.amazonaws.com/channel/testnet/latest.catchpoint",
      "mainnet": "https://algorand-catchpoints.s3.us-east-2.amazonaws.com/channel/mainnet/latest.catchpoint"
    },

    //use gossip network for indexer block prefetch
    "gossip": true,

    //list of nodes (catchup and archive) and optional tokens
    //virtual node will detect nodes' type and magically stream new blocks from / route requests to them
    //forceCatchup makes sure the node is running in catchup mode, needs adminToken
    "nodes": [
      {
        "id": "AlgoNode.GEO",
        "address": "http://mainnet-api.algonode.network"
      },
      {
        "id": "node-local1",
        "address": "http://localhost:18180",
        "token": "YYYY",
        "adminToken": "ZZZZ",
        "forceCatchup": true
      }
    ]
  }
}